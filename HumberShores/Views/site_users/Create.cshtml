@model HumberShores.Models.site_users

@{
    ViewBag.Title = "Register";
}

<div class="container">
    <ul class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")">Home</a></li>
        <li><a href="@Url.Action("Login", "Home")">Administrator Home</a></li>
        <li class="active">Register</li>
    </ul>
    <div class="annHomeHead">
        <h2>Register for a myHumber Account</h2>
    </div>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <main class="col-sm-7 featureContent">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <div>
                        <h3>@Html.LabelFor(model => model.emp_id, "emp_id", htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                        @Html.DropDownList("emp_id", null, htmlAttributes: new { @class = "form-control" })
                        <p>@Html.ValidationMessageFor(model => model.emp_id, "", new { @class = "text-danger" })</p>
                    </div>
                    <div>
                        <h3>@Html.LabelFor(model => model.role_code, "role_code", htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                        @Html.DropDownList("role_code", null, htmlAttributes: new { @class = "form-control" })
                        <p>@Html.ValidationMessageFor(model => model.role_code, "", new { @class = "text-danger" })</p>

                    </div>
                }
                <div>
                    <h3>@Html.LabelFor(model => model.user_first_name, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_first_name, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_first_name, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_last_name, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_last_name, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_last_name, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_dob, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.JQueryUI().DatepickerFor(model => model.user_dob).Inline(true)
                    @Html.ValidationMessageFor(model => model.user_dob, "", new { @class = "text-danger" })
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_gender, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    Male: @Html.RadioButtonFor(model => model.user_gender, "M")
                    Female: @Html.RadioButtonFor(model => model.user_gender, "F")
                    Other: @Html.RadioButtonFor(model => model.user_gender, "Other")
                    <p>@Html.ValidationMessageFor(model => model.user_gender, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_address, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_address, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_address, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_city, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_city, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_city, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_province, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.DropDownList("user_province", new List<SelectListItem> {
                            new SelectListItem{ Text="Alberta", Value = "AB"},
                            new SelectListItem{ Text="British Columbia", Value = "BC"},
                            new SelectListItem{ Text="Manitoba", Value = "MB"},
                            new SelectListItem{ Text="New Brunswick", Value = "NB"},
                            new SelectListItem{ Text="Newfoundland", Value = "NF"},
                            new SelectListItem{ Text="Nova Scotia", Value = "NS"},
                            new SelectListItem{ Text="Nunavut", Value = "NU"},
                            new SelectListItem{ Text="Ontario", Value = "ON"},
                            new SelectListItem{ Text="Prince Edward Island", Value = "PEI"},
                            new SelectListItem{ Text="Saskatchewan", Value = "SK"},
                            new SelectListItem{ Text="Quebec", Value = "QC"},
                            new SelectListItem{ Text="Yukon", Value = "YK"},
                        }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.user_province, "", new { @class = "text-danger" })
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_postal_code, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_postal_code, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_postal_code, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_email, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_email, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_username, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.EditorFor(model => model.user_username, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_username, "", new { @class = "text-danger" })</p>
                </div>

                <div>
                    <h3>@Html.LabelFor(model => model.user_password, htmlAttributes: new { @class = "control-label" }) <span class="required">*</span></h3>
                    @Html.PasswordFor(model => model.user_password, new { @class = "form-control" })
                    <p>@Html.ValidationMessageFor(model => model.user_password, "", new { @class = "text-danger" })</p>
                </div>
                <div>
                    <h3>@Html.LabelFor(model => model.user_phone, htmlAttributes: new { @class = "control-label" })</h3>
                    @Html.EditorFor(model => model.user_phone, new { htmlAttributes = new { @class = "form-control" } })
                    <p>@Html.ValidationMessageFor(model => model.user_phone, "", new { @class = "text-danger" })</p>
                </div>
                <div>
                    <p class="required">* denotes a required field</p>
                    <input type="submit" value="Register" id="blueBtn" class="btn btn-default" />
                    <p class="serviceBtn annCrud">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</p>
                </div>
            </div>
        </main>
    }
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
